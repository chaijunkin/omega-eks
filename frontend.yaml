apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
    release: v1
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        release: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: /actuator/prometheus
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - image: jkplayground/smartbank-frontend-module:nginx-v1.0.0
          name: sba-frontend
          resources: {}
          env:
            - name: ELASTIC_APM_SERVER_URL 
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: ELASTIC_APM_SERVER_URL
            - name: ELASTIC_APM_APPLICATION_PACKAGES 
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: ELASTIC_APM_APPLICATION_PACKAGES
            - name: ELASTIC_APM_SERVICE_NAME 
              value: "omega-front-scbcepb3u3"
            - name: ELASTIC_APM_ENVIRONMENT 
              value: prod
            - name: ELASTIC_APM_LOG_LEVEL 
              value: DEBUG 
            - name: JAVA_TOOL_OPTIONS 
              value: -javaagent:/elastic/apm/agent/elastic-apm-agent.jar
            - name: management.endpoints.web.exposure.include
              value: "*"
            - name: management.server.port
              value: "8888"
            - name: management.metrics.web.server.request.autotime.enabled
              value: "true"
            - name: management.metrics.tags.application
              value: omega-front-scbcepb3u3
          ports:
            - containerPort: 80
              name: nginx
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: elastic-apm-agent
              mountPath: /elastic/apm/agent
      volumes:
        - name: nginx-config
          configMap:
            name: ambassador-nginx-config
        - name: elastic-apm-agent
          emptyDir: {}
      initContainers:
        - name: elastic-java-agent
          image: docker.elastic.co/observability/apm-agent-java:1.12.0
          volumeMounts:
            - mountPath: /elastic/apm/agent
              name: elastic-apm-agent
          command:
            [
              "cp",
              "-v",
              "/usr/agent/elastic-apm-agent.jar",
              "/elastic/apm/agent",
            ]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ambassador-nginx-config
data:
  nginx.conf: |
    events{}
    http {
        include /etc/nginx/mime.types;
        server {
            listen 80;
            listen [::]:80 default_server;
            server_name frontend;
            default_type application/octet-stream;
            gzip on;
            gzip_http_version 1.1;
            gzip_disable      "MSIE [1-6]\.";
            gzip_min_length   256;
            gzip_vary         on;
            gzip_proxied      expired no-cache no-store private auth;
            gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
            gzip_comp_level   9;
            root /usr/share/nginx/html;
            index index.html index.htm;
            location ^~ /ccuser/ {
              proxy_pass http://apiserver;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header   X-Forwarded-User $http_authorization;
              proxy_set_header X-Forwarded-Proto  $scheme;
              proxy_http_version 1.1;
              proxy_cache_bypass $http_upgrade;
            }
            location ^~ /history/ {
              proxy_pass http://apiserver;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header   X-Forwarded-User $http_authorization;
              proxy_set_header X-Forwarded-Proto  $scheme;
              proxy_http_version 1.1;
              proxy_cache_bypass $http_upgrade;
            }
            location ^~ /catalogue/ {
              proxy_pass http://apiserver;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header   X-Forwarded-User $http_authorization;
              proxy_set_header X-Forwarded-Proto  $scheme;
              proxy_http_version 1.1;
              proxy_cache_bypass $http_upgrade;
            }
            location ^~ /rewards/ {
              proxy_pass http://apiserver;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header   X-Forwarded-User $http_authorization;
              proxy_set_header X-Forwarded-Proto  $scheme;
              proxy_http_version 1.1;
              proxy_cache_bypass $http_upgrade;
            }
        }
    }
